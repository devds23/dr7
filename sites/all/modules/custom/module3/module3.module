<?php

/**
 * @file
 * Install, update, and uninstall functions for the module3 module.
 */

/**
 * Implements hook_menu().
 */
function module3_menu() {

  $items['module3/node/%/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['module3/node/%'] = array(
    'title callback' => 'Module3',
    'page callback' => 'module3_wrapper_node_view_page',
    'page arguments' => array(2),
    'access callback' => TRUE,
  );

  $items['module3/node/%/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'module3_wrapper_edit_page',
    'page arguments' => array(2),
    'access callback' => 'module3_update_node_access',
    'access arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
  );

  $items['module3/node'] = array(
    'title' => 'Create a node',
    'page callback' => 'module3_wrapper_create_page',
    'access callback' => 'user_access',
    'access arguments' => array('create program_node content'),
  );

  $items['admin/config/content/module3'] = array(
    'title' => 'Content setting',
    'description' => 'Description for Content settings link',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('module3_content_config_form'),
    'access arguments' => array('administer site configuration'),
    'position' => 'left',
    'weight' => -100,
  );
  $items['module3/node/%/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'module3_wrapper_confirm_form',
    'page arguments' => array(2),
    'access callback' => 'module3_delete_node_access',
    'access arguments' => array(2),
  );

  return $items;
}

/**
 * Implements function module3_wrapper_confirm_form()
 *
 * @return array|bool|mixed
 */
function module3_wrapper_confirm_form($nid) {
  $node = node_load($nid);
  if (empty($node)) {
    return FALSE;
  }
  if ( $node->type == 'program_node' ) {
    $arr = drupal_get_form('module3_confirm_form', $node);
  }
  else {
    return FALSE;
  }

  return $arr;
}

/**
 * @param $form
 * @param $form_state
 * @param $node
 *
 * @return array
 */
function module3_confirm_form($form, &$form_state, $node) {

  return confirm_form(
    $form,
    t("Do you really want delete this %node?", array('%node' => $node->title)),
    "module3/node/" . $node->nid,
    t('This action cannot be undone.'),
    t("Delete"), t("Cancel")
  );
}

/**
 * @param $form
 * @param $form_state
 *
 * @return string
 */
function module3_confirm_form_submit($form, &$form_state) {
  $node = $form_state['build_info']['args'][0];

  if (empty($node)) {
    return "Not Found";
  }

  $id_of_node = $node->nid;
  node_delete($node->nid);

  watchdog('module3', "The node with id @id_of_node was deleted",
    array(
      '@id_of' => $id_of_node,
    )
  );

  $form_state['redirect'] = 'module3/node/';
}

/**
 * @param $nid
 *
 * @return bool|string
 */
function module3_update_node_access($nid) {
  $node = node_load($nid);
  if ( !$node ) {
    return FALSE;
  }
  if ( $node->type != 'program_node' ) {
    return FALSE;
  }
  return node_access('update', $node);
}

/**
 * @param $nid
 *
 * @return bool
 */
function module3_delete_node_access($nid) {
  $node = node_load($nid);
  if ( !$node ) {
    return FALSE;
  }
  if ( $node->type != 'program_node' ) {
    return FALSE;
  }
  return node_access('delete', $node);
}

/**
 * Implements function content_config_form()
 *
 * @param $form
 * @param $form_state
 *
 * @return array
 */
function module3_content_config_form($form, &$form_state) {
  $form['content_view_mode'] = array(
    '#title' => t('View modes'),
    '#type' => 'select',
    '#default_value' => variable_get('content_view_mode'),
    '#options' => array(
      0 => t('--- SELECT ---'),
      'full' => t('Full'),
      'teaser' => t('Teaser'),
    ),
  );
  return system_settings_form($form);
}

/**
 * Implements function module3_node_view_page()
 *
 * @param $node
 *
 * @return string
 */
function module3_node_view_page($nid) {
  $node = node_load($nid);
  $str_html = "<ul>";
  $str_html .= '<li>' . $node->title . '</li>';
  $str_html .= '<li>' . $node->field_pn_article[LANGUAGE_NONE][0]['value'] . '</li>';
  $str_html .= '<li>' . $node->field_pn_description[LANGUAGE_NONE][0]['value'] . '</li>';
//  $str_html .= '<li>' . $node->field_pn_checkbox[][0]['value'] . '</li>';
  $str_html .= '<li>' . $node->field_pn_gender[LANGUAGE_NONE][0]['value'] . '</li>';
  $str_html .= "</ul>";

  return $str_html;
}

/**
 * Iplements function wrapper_edit
 *
 * @param $node
 *
 * @return array|mixed
 */
function module3_wrapper_edit_page($nid = 0) {
  $node = node_load($nid);
  if (empty($node)) {
    return FALSE;
  }
  if ( $node->type == 'program_node' ) {
    $arr = drupal_get_form('module3_node_edit_form', $node);
  }
  else {
    return FALSE;
  }

  return $arr;
}

/**
 * Implements function module3_wrapper_create_page()
 *
 * @return array|mixed
 */
function module3_wrapper_create_page() {
  return drupal_get_form('module3_node_edit_form');
}

/**
 * Implements function module3_wrapper_node_view_page()
 * @param $nid
 *
 * @return array|void
 */
function module3_wrapper_node_view_page($nid) {
  $node = node_load($nid);
  if (empty($node)) {
    return "Not Found";
  }

  return node_view($node, variable_get('content_view_mode'));
}

/**
 * Implements function module3_node_edit_page
 *
 * @param $node
 *
 * @return mixed
 */
function module3_node_edit_form($form, &$form_state, $node=FALSE) {

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#default_value' => $node ? $node->title : FALSE,
    '#required' => TRUE,
  );

  if (!empty($node)) {
    $article = field_get_items('node', $node, 'field_pn_article');
  }
  else {
    $article[0]['value'] = '';
  }
  $form['article'] = array(
    '#type' => 'textfield',
    '#title' => t('Article'),
    '#default_value' => $article[0]['value'] ? $article[0]['value'] : FALSE,
    '#required' => TRUE,
  );

  if (!empty($node)) {
    $about = field_get_items('node', $node, 'field_pn_description');
  }
  else {
    $about[0]['value'] = '';
  }
  $form['about'] = array(
    '#title' => t('About'),
    '#type' => 'textarea',
    '#description' => t('About something'),
    '#default_value' => $about[0]['value'] ? $about[0]['value'] : FALSE,
    '#required' => TRUE,
  );

  if (!empty($node)) {
    $gender = field_get_items('node', $node, 'field_pn_gender');
  }
  else {
    $gender[0]['value'] = '';
  }
  $form['gender'] = array(
    '#type' => 'select',
    '#title' => t('Gender'),
    '#options' => array(
      0 => t('female'),
      1 => t('male'),
    ),
    '#description' => t('Choose your country'),
    '#default_value' =>  $gender[0]['value'] ? $gender[0]['value'] : FALSE,
    '#required' => TRUE,
  );

  $form['status'] = array(
    '#type' => 'radios',
    '#title' => t('Status'),
    '#default_value' => isset($node->status) ? $node->status : 1,
    '#options' => array(0 => t('unpublished'), 1 => t('published')),
  );

  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  if (!empty($node) && node_access('delete', $node)) {
    $form['delete_button'] = array(
      '#type' => 'submit',
      '#value' => t('Delete'),
      '#submit' => array('module3_delete_node_submit'),
      '#executes_submit_callback' => TRUE,
    );
  }
  return $form;
}

/**
 * Implements function module3_delete_node_submit
 *
 * @param $form
 * @param $form_state
 */
function module3_delete_node_submit($form, &$form_state) {
  $node = $form_state['build_info']['args'][0];
  $form_state['redirect'] = 'module3/node/' . $node->nid . '/delete';
}

/**
 * Implements module3_node_edit_page_submit()
 *
 * @param $form
 * @param $form_state
 */
function module3_node_edit_form_submit($form, &$form_state) {
  global $user;
  $node = isset($form_state['build_info']['args'][0]) ? $form_state['build_info']['args'][0] : new stdClass();
  $node->type = 'program_node';
  $node->language = LANGUAGE_NONE;
  node_object_prepare($node); //Set some default values
  $node->status = $form_state['values']['status'];
  $node->uid = $user->uid;
//  dpm($form_state['values']['status']);
  $node->title = $form_state['values']['title'];
  $node->field_pn_article[LANGUAGE_NONE][0]['value'] = $form_state['values']['article'];
  $node->field_pn_description[LANGUAGE_NONE][0]['value'] = $form_state['values']['about'];
  $node->field_pn_gender[LANGUAGE_NONE][0]['value'] = $form_state['values']['gender'];
  $node = node_submit($node);
  node_save($node);
}

/**
 * Implements function html_page()
 *
 * @return string
 */
function module3_html_page() {
  $html_str = "Create your node";

  return $html_str;
}

